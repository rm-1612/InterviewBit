/*

Given a string, find if there is any sub-sequence that repeats itself.
A sub-sequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.

Input: 
string

Output:

0/1
0 -> No
1 -> Yes 
Example:

abab ------> yes, ab is repeated. So, return 1. 
abba ------> No, a and b follow different order. So, return 0. 
NOTE : sub-sequence length should be greater than or equal to 2

*/

int lcs(string A,string B)
{
    int n=B.length(),i,j;
    int dp[n+1][n+1];
    for(i=0;i<=n;++i)
    {
        dp[i][0]=0;
    }
    for(j=0;j<=n;++j)
    {
        dp[0][j]=0;
    }
    for(i=1;i<=n;++i)
    {
        for(j=1;j<=n;++j)
        {
            if(A[i-1]==B[j-1] && i!=j)
            dp[i][j]=1+dp[i-1][j-1];
            else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    }
    return dp[n][n];
}

int Solution::anytwo(string A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    
    if(lcs(A,A)>1)
    return 1;
    return 0;
    
}
